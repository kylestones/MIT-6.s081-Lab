Q:Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A:a0-a7 contain arguments to functions. a2 holds second args.

Q:Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A:no call. just compute the result. 'li a1, 12'

Q:At what address is the function printf located?
A:0x630

Q:What value is in the register ra just after the jalr to printf in main?
A:ra=0x34. auipc save the current pc

Q:
Run the following code.
	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
Here's a description of little- and big-endian and a more whimsical description.
A: unsigned int i = 0x726c6400; no need to change 57616

Q:
In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
	printf("x=%d y=%d", 3);
A:printf will continue get the number from stack and dump.      

